{"version":3,"sources":["components/AddButton/index.tsx","components/Price/index.tsx","components/ProductCard/index.tsx","hooks/useProducts.tsx","components/FavoriteButton/index.tsx","components/ProductCardHeader/index.tsx","App.tsx","index.tsx"],"names":["AddButton","isAdded","onClick","className","src","alt","Price","maxParcelas","valorTotal","product","formataMoeda","num","Intl","NumberFormat","style","currency","format","oldPrice","price","installment","ProductCard","children","ProductContext","createContext","ProductProvider","useState","products","setProducts","useEffect","storage","localStorage","getItem","productsLocalStorage","JSON","parse","String","setLocalStorage","id","title","image","favorite","added","list","setItem","stringify","Provider","value","onFavorite","productsFavorite","map","onAddCart","productsAdd","useProducts","useContext","ButtonFavorite","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ProductCardHeader","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b31935f3.chunk.js","sourcesContent":["import './index.scss';\n\ninterface AddButtonProps {\n    isAdded: boolean;\n    onClick: () => void;\n}\n\nexport function AddButton({ isAdded, onClick }: AddButtonProps) {\n    return (\n        <button onClick={onClick} className={isAdded ? \"isActiveAddButton\" : \"addButton\"}>\n            {isAdded && (\n                <img src=\"./assets/icons/check.svg\" alt=\"check\" />\n            )}\n            &nbsp;\n            {isAdded ? \"Adicionado\" : \"Adicionar\"}\n        </button>\n    );\n}","import './index.scss';\n\ninterface PriceProps {\n    product: {\n        price: number;\n        oldPrice: number;\n        installment: number;\n    }\n}\n\nexport function Price({ product }: PriceProps) {\n    const formataMoeda = (num: any) => {\n        const formatCurrency = new Intl.NumberFormat('pt-BR', {\n            style: 'currency',\n            currency: 'BRL'\n        });\n\n        return formatCurrency.format(num);\n    }\n\n    const calculaParcelas = (maxParcelas: any, valorTotal: any) => {\n        return (valorTotal / maxParcelas);\n    }\n\n    return (\n        <>\n            <p className=\"oldPrice\">\n                {formataMoeda(product.oldPrice)}\n            </p>\n\n            <p className=\"price\">\n                {formataMoeda(product.price)}\n            </p>\n\n            <p className=\"installment\">\n                em até <strong>{product.installment}x de {formataMoeda(calculaParcelas(product.installment, product.price))}</strong> sem juros\n            </p>\n        </>\n    );\n}","import { ReactNode } from \"react\";\nimport './index.scss';\n\ninterface ProductCardProps {\n    children: ReactNode;\n}\n\nexport function ProductCard({ children }: ProductCardProps) {\n    return (\n        <div className=\"item\">\n            {children}\n        </div>\n    );\n}\n","import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\n\ninterface ProductProviderProps {\n    children: ReactNode;\n}\n\ninterface ProductContextProps {\n    products: Product[];\n    onFavorite: (id: number) => void;\n    onAddCart: (id: number) => void;\n}\n\ninterface Product {\n    id: number;\n    title: string;\n    image: string;\n    oldPrice: number;\n    price: number;\n    favorite: boolean;\n    added: boolean;\n    installment: number;\n}\n\nconst ProductContext = createContext<ProductContextProps>({} as ProductContextProps);\n\nexport function ProductProvider({ children }: ProductProviderProps) {\n    const [products, setProducts] = useState<Product[]>([]);\n\n    useEffect(() => {\n        let list = [\n            {\n                id: 1,\n                title: \"Monitor LED 27'' Gamer Curvo Samsung  1920 x 1080 FHD 240 Hz HDMI, DP, Gsync Série CRG50\",\n                image: \"./assets/produtos/image.png\",\n                oldPrice: 2813.99,\n                price: 2599.00,\n                favorite: false,\n                added: false,\n                installment: 10\n            },\n            {\n                id: 2,\n                title: \"Monitor LED 24'' Gamer Curvo Samsung  1920 x 1080 FHD 240 Hz HDMI, DP, Gsync Série CRG50\",\n                image: \"./assets/produtos/image.png\",\n                oldPrice: 1899.99,\n                price: 1399.00,\n                favorite: false,\n                added: false,\n                installment: 10\n            }\n        ];\n\n        const storage = localStorage.getItem('products');\n        const productsLocalStorage = JSON.parse(String(storage));\n\n        if (!products) {\n            setLocalStorage(products);\n            setProducts(list)\n        } else {\n            setProducts(productsLocalStorage);\n        }\n    }, []);\n\n    const onAddCart = (id: number) => {\n        const productsAdd = products.map(product => {\n            if (product.id === id) {\n                product.added = !product.added;\n            }\n\n            return product;\n        })\n\n        setProducts(productsAdd);\n        setLocalStorage(productsAdd);\n    }\n\n    const onFavorite = (id: number) => {\n        const productsFavorite = products.map(product => {\n            if (product.id === id) {\n                product.favorite = !product.favorite;\n            }\n\n            return product;\n        })\n\n        setProducts(productsFavorite);\n        setLocalStorage(productsFavorite);\n    }\n\n    const setLocalStorage = (list: Product[]) => {\n        localStorage.setItem('products', JSON.stringify(list))\n    }\n\n    return (\n        <ProductContext.Provider value={{ products, onFavorite, onAddCart }}>\n            {children}\n        </ProductContext.Provider>\n    );\n}\n\nexport const useProducts = () => useContext(ProductContext);","import './index.scss';\n\ninterface ButtonFavoriteProps {\n    favorite: boolean;\n    onClick: () => void;\n}\n\nexport function ButtonFavorite({ favorite, onClick }: ButtonFavoriteProps) {\n    return (\n        <div onClick={onClick} className={favorite ? 'isActiveFavoriteButton' : 'favorite'}>\n            <svg width=\"26\" height=\"23\" viewBox=\"0 0 26 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M23.1494 2.85655C22.5629 2.26797 21.8667 1.80107 21.1003 1.48251C20.334 1.16396 19.5126 1 18.6831 1C17.8535 1 17.0321 1.16396 16.2658 1.48251C15.4994 1.80107 14.8032 2.26797 14.2167 2.85655L12.9997 4.07749L11.7826 2.85655C10.5981 1.66822 8.99152 1.00062 7.31633 1.00062C5.64114 1.00062 4.03455 1.66822 2.85001 2.85655C1.66547 4.04489 1 5.65662 1 7.33718C1 9.01774 1.66547 10.6295 2.85001 11.8178L4.06705 13.0387L12.9997 22L21.9323 13.0387L23.1494 11.8178C23.7361 11.2295 24.2015 10.531 24.519 9.76219C24.8366 8.99339 25 8.16936 25 7.33718C25 6.50499 24.8366 5.68096 24.519 4.91216C24.2015 4.14336 23.7361 3.44486 23.1494 2.85655Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n            </svg>\n        </div>\n    );\n}","import { useProducts } from \"../../hooks/useProducts\";\nimport { ButtonFavorite } from \"../FavoriteButton\";\nimport './index.scss';\n\ninterface ProductCardHeaderProps {\n    product: {\n        id: number;\n        title: string;\n        image: string;\n        favorite: boolean;\n    }\n}\n\nexport function ProductCardHeader({ product }: ProductCardHeaderProps) {\n    const { onFavorite } = useProducts();\n\n    return (\n        <div className=\"itemHeader\">\n            <img src={product.image} alt=\"product\" />\n\n            <p className=\"title\">{product.title}</p>\n\n            <ButtonFavorite onClick={() => { onFavorite(product.id) }} favorite={product.favorite} />\n        </div>\n    );\n}","import React from 'react';\nimport './App.scss';\nimport { AddButton } from './components/AddButton';\nimport { Price } from './components/Price';\nimport { ProductCard } from './components/ProductCard';\nimport { ProductCardHeader } from './components/ProductCardHeader';\nimport { useProducts } from './hooks/useProducts';\n\nexport default function App() {\n  const { products, onAddCart } = useProducts();\n\n  return (\n    <div className=\"App\">\n      <div className=\"productsGrid\">\n        {products.map(product => {\n          return (\n            <ProductCard key={product.id}>\n              <ProductCardHeader product={product} />\n              <Price product={product} />\n\n              <br /><br /><br /><br />\n\n              <AddButton onClick={() => onAddCart(product.id)} isAdded={product.added} />\n            </ProductCard>\n          );\n        })}\n\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ProductProvider } from './hooks/useProducts';\nimport './index.scss';\n\nReactDOM.render(\n  <ProductProvider>\n    <App />\n  </ProductProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}